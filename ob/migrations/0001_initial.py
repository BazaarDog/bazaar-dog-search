# -*- coding: utf-8 -*-
# Generated by Django 1.11.18 on 2019-04-14 16:06
from __future__ import unicode_literals

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.TextField(null=True)),
                ('rate', models.FloatField(default=0)),
                ('base_unit', models.IntegerField(default=100)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.TextField(null=True)),
                ('original', models.TextField(null=True)),
                ('large', models.TextField(null=True)),
                ('medium', models.TextField(null=True)),
                ('small', models.TextField(null=True)),
                ('tiny', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accepted_currencies_array', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=5), blank=True, null=True, size=None)),
                ('free_shipping', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=80), blank=True, null=True, size=None)),
                ('tags_array', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=40), blank=True, null=True, size=None)),
                ('categories_array', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=80), blank=True, null=True, size=None)),
                ('hash', models.TextField(null=True)),
                ('title', models.TextField(null=True)),
                ('slug', models.SlugField(max_length=256, null=True)),
                ('description', models.TextField(null=True)),
                ('signature', models.TextField(null=True)),
                ('contract_type', models.IntegerField(blank=True, choices=[('', 'Any'), (0, 'Physical Good'), (1, 'Digital Good'), (2, 'Service'), (4, 'Cryptocurrency')], null=True)),
                ('condition_type', models.IntegerField(blank=True, choices=[('', 'Any'), (0, 'New'), (1, 'Used Exellent'), (2, 'Used Good'), (3, 'Used Poor'), (4, 'Refurbished')], null=True)),
                ('rating_count', models.IntegerField(default=0)),
                ('rating_average', models.FloatField(default=0)),
                ('rating_count_stale', models.IntegerField(default=0)),
                ('rating_average_stale', models.FloatField(default=0)),
                ('rating_dot', models.FloatField(default=0)),
                ('nsfw', models.BooleanField(default=False)),
                ('spam', models.BooleanField(default=False)),
                ('dust', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('network', models.TextField(default='mainnet')),
                ('price', models.BigIntegerField(blank=True, null=True)),
                ('price_value', models.FloatField(blank=True, null=True)),
                ('pricing_currency', models.TextField()),
                ('version', models.IntegerField(blank=True, null=True)),
                ('refund_policy', models.TextField(null=True)),
                ('rank', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('attempt', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-rank'],
            },
        ),
        migrations.CreateModel(
            name='ListingImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveIntegerField(verbose_name='Index')),
                ('filename', models.TextField(null=True)),
                ('original', models.TextField(null=True)),
                ('large', models.TextField(null=True)),
                ('medium', models.TextField(null=True)),
                ('small', models.TextField(null=True)),
                ('tiny', models.TextField(null=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='ob.Listing')),
            ],
        ),
        migrations.CreateModel(
            name='ListingRating',
            fields=[
                ('ratingID', models.CharField(max_length=46, primary_key=True, serialize=False)),
                ('average', models.FloatField(default=0, null=True)),
                ('overall', models.IntegerField(default=0, null=True)),
                ('quality', models.IntegerField(default=0, null=True)),
                ('description', models.IntegerField(default=0, null=True)),
                ('delivery_speed', models.IntegerField(default=0, null=True)),
                ('customer_service', models.IntegerField(default=0, null=True)),
                ('review', models.TextField(blank=True, default='')),
                ('timestamp', models.DateTimeField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='ob.Listing')),
            ],
        ),
        migrations.CreateModel(
            name='ListingReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.TextField(default='', null=True)),
                ('peerID', models.TextField(default='', null=True)),
                ('reason', models.TextField(default='', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ob.Listing')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('peerID', models.CharField(max_length=46, primary_key=True, serialize=False)),
                ('serialized_record', models.TextField(blank=True, default='')),
                ('name', models.TextField(blank=True, default='')),
                ('about', models.TextField(blank=True, default='')),
                ('handle', models.TextField(blank=True, default='')),
                ('network', models.TextField(default='mainnet')),
                ('user_agent', models.TextField(blank=True, default='')),
                ('location', models.TextField(blank=True, default='')),
                ('short_description', models.TextField(blank=True, default='')),
                ('moderator', models.BooleanField(default=False)),
                ('moderator_description', models.TextField(default='')),
                ('moderator_terms', models.TextField(default='')),
                ('moderator_languages', models.TextField(default='')),
                ('moderator_languages_array', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), blank=True, null=True, size=None)),
                ('moderator_accepted_currencies_array', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), blank=True, null=True, size=None)),
                ('moderator_fee_type', models.IntegerField(choices=[(0, 'Any'), (1, 'Percentage'), (2, 'Fixed'), (3, 'Fixed Plus Percentage')], default=0)),
                ('moderator_fee_percentage', models.FloatField(default=0)),
                ('moderator_fee_fixed_currency', models.TextField(default='')),
                ('moderator_fee_fixed_amount', models.FloatField(default=0)),
                ('website', models.TextField(default='')),
                ('email', models.TextField(default='')),
                ('phone', models.TextField(default='')),
                ('online', models.BooleanField(default=False)),
                ('nsfw', models.BooleanField(default=False)),
                ('vendor', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('scam', models.BooleanField(default=False)),
                ('illegal_in_us', models.BooleanField(default=False)),
                ('dog_follows', models.BooleanField(default=False)),
                ('follower_count', models.IntegerField(default=0)),
                ('rank', models.IntegerField(default=0)),
                ('speed_rank', models.FloatField(default=10000000.0)),
                ('listing_count', models.IntegerField(default=0)),
                ('moderated_items_count', models.IntegerField(default=0)),
                ('rating_count', models.IntegerField(default=0)),
                ('rating_average', models.FloatField(default=0)),
                ('rating_dot', models.FloatField(default=0)),
                ('connection_type', models.IntegerField(choices=[('', 'Any'), (0, 'Clearnet'), (1, 'Dual Stack'), (2, 'Tor Only'), (3, 'IPFS Cached')], default=3)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('attempt', models.DateTimeField(auto_now=True)),
                ('was_online', models.DateTimeField(null=True)),
                ('pinged', models.DateTimeField(auto_now=True)),
                ('avatar', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_avatar', to='ob.Image')),
                ('header', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_header', to='ob.Image')),
            ],
            options={
                'ordering': ['-rank'],
            },
        ),
        migrations.CreateModel(
            name='ProfileAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(blank=True, default='')),
                ('address_type', models.IntegerField(blank=True, choices=[(0, 'ipv4'), (1, 'ipv6'), (2, 'onion')], null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='ob.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileSocial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_type', models.TextField(blank=True, default='')),
                ('username', models.TextField(blank=True, default='')),
                ('proof', models.TextField(blank=True, default='')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social', to='ob.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='ShippingOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(null=True)),
                ('option_type', models.IntegerField(blank=True, choices=[(0, 'Local Pickup'), (1, 'Fixed Price')], null=True)),
                ('regions_array', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=80), blank=True, null=True, size=None)),
                ('service_name', models.TextField(null=True)),
                ('service_price', models.TextField(null=True)),
                ('service_estimated_delivery', models.TextField(null=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ob.Listing')),
            ],
        ),
        migrations.AddField(
            model_name='listingrating',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ob.Profile'),
        ),
        migrations.AddField(
            model_name='listing',
            name='moderators',
            field=models.ManyToManyField(blank=True, related_name='moderated_items', to='ob.Profile'),
        ),
        migrations.AddField(
            model_name='listing',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ob.Profile'),
        ),
        migrations.AlterUniqueTogether(
            name='listing',
            unique_together=set([('profile', 'slug')]),
        ),
    ]
